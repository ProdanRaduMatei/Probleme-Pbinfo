#include <bits/stdc++.h>
using namespace std; ifstream fin("sahara.in"); ofstream fout("sahara.out"); const int di[]={-1 , 0 , 1 , 0}; const int dj[]={0 , 1 , 0 , -1}; int n , m , q; int a[1002][1002], numar; struct poz{int i , j;}; bool inside(int i , int j) { return i>=1 && i<=n && j>=1 && j<=m; } void Fill(int x, int y) { if (!inside(x, y) || a[x][y] < q)return; a[x][y] = -1; numar ++; Fill(x + 1, y); Fill(x, y + 1); Fill(x - 1, y); Fill(x, y - 1); } int main() { int nr; fin >> n >> m >> q; fin >> nr; for (int i = 1, x1, y1, x2, y2, add; i <= nr; i ++) { fin >> x1 >> y1 >> x2 >> y2 >> add; a[x1][y1] += add; a[x1][y2 + 1] -= add; a[x2 + 1][y1] -= add; a[x2 + 1][y2 + 1] += add; } for(int i = 1 ; i <= n ; ++i) for(int j = 1 ; j <= m ; ++j) a[i][j] = a[i][j] + a[i-1][j] + a[i][j-1] - a[i-1][j-1]; int mx= 0; for(int i = 1 ; i <= n ; ++i) for(int j = 1 ; j <= m ; ++j) if (a[i][j] >= q) { numar = 0; Fill(i, j); mx = max(numar, mx); } fout << mx; return 0; }
